package control;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;

import dao.DAOConexaoSingleton;
import model.Arma;

/*
 * Autor: Diego Souza Silva
 * Data: 05/06/2017;
 */

public class CtrArma implements TableModel {
	private Arma arma;
	private List<Arma> listaArmas;
	Connection conex;
	
	public CtrArma() {
		listaArmas = new ArrayList<>();
		conex = DAOConexaoSingleton.getInstanciaUnica().getConexao();
	}
	
	public void adicionarArma(Arma a) {
		String sql = "INSERT INTO arma (id, modelo, nomeNaObra, peso, comprimento, "
				+ "alcance, equipamentos, capacidade, personagem, calibre, fabricante) "
				+ "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
		
		try {
			PreparedStatement statem = conex.prepareStatement(sql);
			statem.setInt(1, a.getId());
			statem.setString(2, a.getModelo());
			statem.setString(3, a.getNomeNaObra());
			statem.setDouble(4, a.getPeso());
			statem.setDouble(5, a.getComprimentoCm());
			statem.setInt(6, a.getAlcance());
			statem.setString(7, a.getEquipamentos());
			statem.setInt(8, a.getCapacidade());
			statem.setInt(9, a.getPersongem().getId());
			statem.setInt(10, a.getCalibre().getId());
			statem.setInt(11, a.getFabricante().getId());
			statem.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	public void alterarArma(Arma a) {
		String sql = "UPDATE arma SET id = ?, modelo = ?, nomeNaObra = ?, peso = ?, comprimento = ?, "
				+ "alcance = ?, equipamentos = ?, capacidade = ?, personagem = ?, calibre = ?, fabricante = ?";
		
		try {
			PreparedStatement statem = conex.prepareStatement(sql);
			statem.setInt(1, a.getId());
			statem.setString(2, a.getModelo());
			statem.setString(3, a.getNomeNaObra());
			statem.setDouble(4, a.getPeso());
			statem.setDouble(5, a.getComprimentoCm());
			statem.setInt(6, a.getAlcance());
			statem.setString(7, a.getEquipamentos());
			statem.setInt(8, a.getCapacidade());
			statem.setInt(9, a.getPersongem().getId());
			statem.setInt(10, a.getCalibre().getId());
			statem.setInt(11, a.getFabricante().getId());
			statem.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	public Arma excluirArma(Arma a) {
		String sql = "DELETE FROM arma WHERE id = ?";
		
		try {
			PreparedStatement statem = conex.prepareStatement(sql);
			statem.setInt(1, a.getId());
			statem.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return a;
		
	}
	
	public List<Arma> consultarArma() {
		return listaArmas;
	}
	
	public void contarArmas() {
		
	}

	@Override
	public void addTableModelListener(TableModelListener l) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Class<?> getColumnClass(int columnIndex) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int getColumnCount() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public String getColumnName(int columnIndex) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int getRowCount() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public Object getValueAt(int rowIndex, int columnIndex) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean isCellEditable(int rowIndex, int columnIndex) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void removeTableModelListener(TableModelListener l) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
		// TODO Auto-generated method stub
		
	}
	
}
